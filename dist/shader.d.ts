export declare const VERTEX_SHADER_SOURCE = "\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUv;\nvoid main() {\n\tgl_Position = vec4( position, 1., 1. );\n\tvUv = uv;\n}\n";
export declare const FRAGMENT_SHADER_SOURCE = "\nprecision highp float;\nvarying vec2 vUv;\nuniform float progress;\nuniform sampler2D media, mask;\n\nfloat dissolveLowEdge = 0.0;\nfloat dissolveHighEdge = 1.0;\nfloat edgeDelta = dissolveHighEdge - dissolveLowEdge;\n\nvoid main(){\n\n\tvec4 color = texture2D( media, vUv );\n\tfloat dissolveProgress = progress * ( 1.0 + edgeDelta );\n\tfloat alpha = smoothstep( dissolveLowEdge, dissolveHighEdge, clamp( texture2D( mask, vUv ).r - 1.0 + dissolveProgress, 0.0, 1.0 ) );\n\n\tgl_FragColor = vec4( color.rgb, color.a * alpha );\n\t// gl_FragColor = vec4( vec3( color.a * alpha ), 1. );\n\n}\n";
