export declare const VERTEX_SHADER_SOURCE = "\nattribute vec2 position;\nattribute vec2 uv;\nuniform vec2 uvScale;\nvarying vec2 vUv;\nvoid main() {\n\tgl_Position = vec4( position, 1., 1. );\n\n\tvUv = uv;\n\n\tif ( uvScale.y < 1.0 ) {\n\n\t\tfloat offset = ( 1.0 - uvScale.y ) * .5;\n\t\tvUv.y = vUv.y * uvScale.y + offset;\n\n\t} else {\n\n\t\tfloat offset = ( 1.0 - uvScale.x ) * .5;\n\t\tvUv.x = vUv.x * uvScale.x + offset;\n\n\t}\n}\n";
export declare const FRAGMENT_SHADER_SOURCE = "\nprecision highp float;\nvarying vec2 vUv;\nuniform float progress;\nuniform float dissolveLowEdge;\nuniform float dissolveHighEdge;\nuniform sampler2D media, mask;\n\nvoid main(){\n\n\tvec4 color = texture2D( media, vUv );\n\tfloat alpha = smoothstep( dissolveLowEdge, dissolveHighEdge, clamp( texture2D( mask, vUv ).r - 1.0 + progress, 0.0, 1.0 ) );\n\n\tgl_FragColor = vec4( color.rgb, color.a * alpha );\n\t// gl_FragColor = vec4( vec3( color.a * alpha ), 1. );\n\n}\n";
